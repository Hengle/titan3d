#include "Inc/VertexLayout.cginc"

#include "dummy.gen"

PS_INPUT VS_Main( VS_INPUT input )
{
	PS_INPUT output = (PS_INPUT)0;

	output.vUV = input.vSkinWeight.zw;

	float3 transPos = mul(float4(input.vSkinWeight.xy, 0, 1), RenderMatrix).xyz;
	output.vPosition.w = 1;
	output.vPosition.z = transPos.z;
	output.vPosition.x = -1 + transPos.x * 2 * gViewportSizeAndRcp.z;
	output.vPosition.y = 1 - transPos.y * 2 * gViewportSizeAndRcp.w;
	/*
	output.vPosition.w = 1;
	output.vPosition.z = 0;
	output.vPosition.x = -1 + (input.vSkinWeight.x*TextScale.x+TextOffset.x)*2 * gViewportSizeAndRcp.z;
	output.vPosition.y = 1 - (input.vSkinWeight.y*TextScale.y+TextOffset.y)*2 * gViewportSizeAndRcp.w;
	*/

	return output;
}

struct PS_OUTPUT
{
	float4 RenderTarget0 : SV_Target0;
};
PS_OUTPUT PS_Main( PS_INPUT input )
{
#ifndef DO_PS_MATERIAL
	#define DO_PS_MATERIAL DoDefaultPSMaterial
#endif

	MTL_OUTPUT mtl = Default_PSInput2Material(input);

	DO_PS_MATERIAL(input, mtl);

	PS_OUTPUT output = (PS_OUTPUT)0;

	output.RenderTarget0 = half4(mtl.mAlbedo * TextColor.xyz, mtl.mAlpha * TextOpacity);

	return output;
}
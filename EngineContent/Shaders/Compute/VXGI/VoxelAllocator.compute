#include "VXGICommon.compute"

int GetIndexOfAllocator(uint3 id)
{
	//return id.y * (64 * 64) + id.z * 64 + id.x;
	return id.x;
}

uint AllocVxGroup()
{
	return 0;
}

[numthreads(DispatchX, DispatchY, DispatchZ)]
void CS_SetupVxAllocator(uint3 id : SV_DispatchThreadID)
{
	int idx = GetIndexOfAllocator(id);
	VxAllocator[idx] = idx;
	GpuSceneDesc[0].FreeGroupIndex = 0;

	int vxGroupAddress = idx * VxGroupStride;

	for (int i = 0; i < VxGroupCubeSide; i++)
	{
		for (int j = 0; j < VxGroupCubeSide; j++)
		{
			for (int k = 0; k < VxGroupCubeSide; k++)
			{
				int offset = GetVxOffsetInGroup(i, j, k) * VxDescStructSize;
				VxPool[vxGroupAddress + offset + 0] = 0;
				VxPool[vxGroupAddress + offset + 1] = 0;
			}
		}
	}
}

[numthreads(DispatchX, DispatchY, DispatchZ)]
void CS_SetupVxScene(uint3 id : SV_DispatchThreadID)
{
	int idx = GetVxGroupInScene(id);
	VxScene[idx] = -1;
}
//
#ifndef _MOBILE_BLOOM_DS_
#define _MOBILE_BLOOM_DS_

#include "Inc/VertexLayout.cginc"
#include "Inc/Math.cginc"
#include "Inc/PostEffectCommon.cginc"

#include "dummy.gen"

//warning: Samp_ + tex_name!
Texture2D gSrcTex;
SamplerState Samp_gSrcTex;



PS_INPUT VS_Main(VS_INPUT input1)
{
	VS_MODIFIER input = VS_INPUT_TO_VS_MODIFIER(input1);
	PS_INPUT output = (PS_INPUT)0;

	output.vPosition = float4(input.vPosition.xyz, 1.0f);
	output.vUV = input.vUV;

	half start = 1.5h / 14.0h;
	half scale = 1.0h;

	output.vTangent.xy = input.vUV + CircleSampler(14.0h, start, 0.0h) * scale * gViewportSizeAndRcp.zw;
	output.vTangent.zw = input.vUV + CircleSampler(14.0h, start, 1.0h) * scale * gViewportSizeAndRcp.zw;
	output.vLightMap.xy = input.vUV + CircleSampler(14.0h, start, 2.0h) * scale * gViewportSizeAndRcp.zw;
	output.vLightMap.zw = input.vUV + CircleSampler(14.0h, start, 3.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV0.xy = input.vUV + CircleSampler(14.0h, start, 4.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV0.zw = input.vUV + CircleSampler(14.0h, start, 5.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV1.xy = input.vUV + CircleSampler(14.0h, start, 6.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV1.zw = input.vUV + CircleSampler(14.0h, start, 7.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV2.xy = input.vUV + CircleSampler(14.0h, start, 8.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV2.zw = input.vUV + CircleSampler(14.0h, start, 9.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV3.xy = input.vUV + CircleSampler(14.0h, start, 10.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV3.zw = input.vUV + CircleSampler(14.0h, start, 11.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV4.xy = input.vUV + CircleSampler(14.0h, start, 12.0h) * scale * gViewportSizeAndRcp.zw;
	output.psCustomUV4.zw = input.vUV + CircleSampler(14.0h, start, 13.0h) * scale * gViewportSizeAndRcp.zw;

	return output;
}



struct PS_OUTPUT
{
	half3 RT0 : SV_Target0;
};

PS_OUTPUT PS_Main(PS_INPUT input)
{
	PS_OUTPUT output = (PS_OUTPUT)0;

	half3 P0 = gSrcTex.Sample(Samp_gSrcTex, input.vTangent.xy).rgb;
	half3 P1 = gSrcTex.Sample(Samp_gSrcTex, input.vTangent.zw).rgb;
	half3 P2 = gSrcTex.Sample(Samp_gSrcTex, input.vLightMap.xy).rgb;
	half3 P3 = gSrcTex.Sample(Samp_gSrcTex, input.vLightMap.zw).rgb;
	half3 P4 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV0.xy).rgb;
	half3 P5 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV0.zw).rgb;
	half3 P6 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV1.xy).rgb;
	half3 P7 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV1.zw).rgb;
	half3 P8 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV2.xy).rgb;
	half3 P9 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV2.zw).rgb;
	half3 P10 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV3.xy).rgb;
	half3 P11 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV3.zw).rgb;
	half3 P12 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV4.xy).rgb;
	half3 P13 = gSrcTex.Sample(Samp_gSrcTex, input.psCustomUV4.zw).rgb;
	half3 Pcenter = gSrcTex.Sample(Samp_gSrcTex, input.vUV).rgb;

	half3 Pfinal = P0 + P1 + P2 + P3 + P4 + P5 + P6 + P7 + P8 + P9 + P10 + P11 + P12 + P13;
	Pfinal = (1.0h / 14.0h * 0.85h) * Pfinal + Pcenter * 0.15h;
	output.RT0.rgb = Pfinal;

	return output;
}

#endif
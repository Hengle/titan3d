#ifndef _MOBILE_OPAQUE_EDITOR_
#define _MOBILE_OPAQUE_EDITOR_

#define MODE_EDITOR

#include "Inc/MobileBasePassPS.cginc"

#ifdef MDFQUEUE_FUNCTION
MDFQUEUE_FUNCTION
#endif

//WARNING:don't change vs_main or ps_main's parameters name cause we also use it in c++;It's an appointment;
PS_INPUT VS_Main(VS_INPUT input)
{
	PS_INPUT output = (PS_INPUT)0;
#if defined(MDF_INSTANCING)
	output.PointLightIndices = PointLightIndices;
	output.SpecialData.x = PointLightNum;
#endif

#ifdef MDFQUEUE_FUNCTION
	MdfQueueDoModifiers(output, input);
#endif

	MTL_OUTPUT mtl = (MTL_OUTPUT)0;
	//mtl template stuff;
	{
#ifndef DO_VSInput_To_PSInput
#define DO_VSInput_To_PSInput Default_VSInput2PSInput
#endif
		DO_VSInput_To_PSInput(output, input);

#ifndef DO_VS_MATERIAL
#define DO_VS_MATERIAL DoDefaultVSMaterial
#endif

		DO_VS_MATERIAL(output, mtl);
	}

#if !defined(MDF_INSTANCING)
	output.vPosition.xyz += mtl.mVertexOffset;

	output.vWorldPos = mul(float4(output.vPosition.xyz, 1), WorldMatrix).xyz;
	output.vNormal = normalize(mul(float4(output.vNormal.xyz, 0), WorldMatrix).xyz);
	output.vTangent.xyz = normalize(mul(float4(output.vTangent.xyz, 0), WorldMatrix).xyz);
#endif
	output.vPosition = mul(float4(output.vWorldPos, 1), ViewPrjMtx);

	//output.psCustomUV0.xy = float2(output.vPosition.xy / output.vPosition.w) * float2(0.5f, -0.5f) + float2(0.5f, 0.5f);
	//output.psCustomUV0.z = float(output.vPosition.z / output.vPosition.w);
	output.psCustomUV0.w = output.vPosition.w;

	return output;
}

PS_OUTPUT PS_Main(PS_INPUT input)
{
	return PS_MobileBasePass(input);
}

#endif
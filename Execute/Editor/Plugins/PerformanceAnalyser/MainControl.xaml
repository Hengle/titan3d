<UserControl x:Name="userControl" x:Class="PerformanceAnalyser.MainControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PerformanceAnalyser"
             xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary"
             xmlns:SearchBox="clr-namespace:SearchBox;assembly=EditorCommon"
             xmlns:EditorCommon="clr-namespace:EditorCommon.Controls;assembly=EditorCommon"
             xmlns:d3="http://research.microsoft.com/DynamicDataDisplay/1.0"  
             xmlns:WPG="clr-namespace:WPG;assembly=EditorCommon"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <local:DataTemplateSelector x:Key="dataTemplateSelector" />
        <HierarchicalDataTemplate x:Key="PerfCountTemplate" ItemsSource="{Binding Childrens}" DataType="{x:Type local:PerformanceItem_PerfCount}">
            <Grid Background="{Binding TreeViewItemBackground}" Margin="0,1,1,0"  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.ContextMenu>
                    <ContextMenu Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ContextMenu_Default}}">
                        <MenuItem Header="选中全部子" Click="MenuItem_CheckAllChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                        <MenuItem Header="取消选中全部子" Click="MenuItem_UnCheckAllChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                        <Separator/>
                        <MenuItem Header="选中当前层全部子" Click="MenuItem_CheckAllCurrentLevelChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                        <MenuItem Header="取消选中当前层全部子" Click="MenuItem_UnCheckAllCurrentLevelChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                    </ContextMenu>
                </Grid.ContextMenu>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" ToolTip="{Binding ToolTip}">
                    <CheckBox IsChecked="{Binding Listening}" Visibility="{Binding ListeningVisible}"  ToolTip="勾选监听" VerticalAlignment="Center"/>
                    <EditorCommon:CustomTextBlock Text="{Binding ItemName}" Foreground="{Binding TreeViewItemForeground}" HighLightString="{Binding HighLightString}" Grid.Column="2" VerticalAlignment="Center" Margin="2"/>
                </StackPanel>
                <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding DataShow}">
                    <StackPanel Orientation="Horizontal" Margin="1">
                        <ToggleButton IsChecked="{Binding AvgTimeShowInGraph}" Style="{DynamicResource {ComponentResourceKey ResourceId=ToggleButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"
                                          ToolTip="显示AvgTime时间线" Grid.Column="1" VerticalAlignment="Center">
                            <Image Source="/ResourceLibrary;component/Icons/Icons/icon_toolbar_genericfinder_512px.png" Width="18" Height="18"/>
                        </ToggleButton>
                        <TextBlock Text="Avg:" Foreground="#FFD6D6D6" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <TextBlock Text="{Binding AvgTime}" Foreground="White" VerticalAlignment="Center" Margin="2"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="1">
                        <ToggleButton IsChecked="{Binding AvgTimePerHitShowInGraph}" Style="{DynamicResource {ComponentResourceKey ResourceId=ToggleButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"
                                          ToolTip="显示AvgTimePerHit时间线" Grid.Column="1" VerticalAlignment="Center">
                            <Image Source="/ResourceLibrary;component/Icons/Icons/icon_toolbar_genericfinder_512px.png" Width="18" Height="18"/>
                        </ToggleButton>
                        <TextBlock Text="AvgPH:" Foreground="#FFD6D6D6" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <TextBlock Text="{Binding AvgTimePerHit}" Foreground="White" VerticalAlignment="Center" Margin="2"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton IsChecked="{Binding AvgHitShowInGraph}" Style="{DynamicResource {ComponentResourceKey ResourceId=ToggleButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"
                                          ToolTip="显示AvgCounter时间线" Grid.Column="1" VerticalAlignment="Center">
                            <Image Source="/ResourceLibrary;component/Icons/Icons/icon_toolbar_genericfinder_512px.png" Width="18" Height="18"/>
                        </ToggleButton>
                        <TextBlock Text="Hit:" Foreground="#FFD6D6D6" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <TextBlock Text="{Binding AvgHit}" Foreground="White" VerticalAlignment="Center" Margin="2" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="1">
                        <ToggleButton IsChecked="{Binding MaxTimeInCounterShowInGraph}" Style="{DynamicResource {ComponentResourceKey ResourceId=ToggleButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"
                                          ToolTip="显示MaxTimeInCounter时间线" Grid.Column="1" VerticalAlignment="Center">
                            <Image Source="/ResourceLibrary;component/Icons/Icons/icon_toolbar_genericfinder_512px.png" Width="18" Height="18"/>
                        </ToggleButton>
                        <TextBlock Text="Max:" Foreground="#FFD6D6D6" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <TextBlock Text="{Binding MaxTimeInCounter}" Foreground="White" VerticalAlignment="Center" Margin="2" />
                    </StackPanel>
                </StackPanel>
            </Grid>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="PerfDataTemplate" ItemsSource="{Binding Childrens}" DataType="{x:Type local:PerformanceItem_Data}">
            <Grid Background="{Binding TreeViewItemBackground}" Margin="0,1,1,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.ContextMenu>
                    <ContextMenu Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ContextMenu_Default}}">
                        <MenuItem Header="选中全部子" Click="MenuItem_CheckAllChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                        <MenuItem Header="取消选中全部子" Click="MenuItem_UnCheckAllChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                        <Separator/>
                        <MenuItem Header="选中当前层全部子" Click="MenuItem_CheckAllCurrentLevelChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                        <MenuItem Header="取消选中当前层全部子" Click="MenuItem_UnCheckAllCurrentLevelChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                    </ContextMenu>
                </Grid.ContextMenu>
                <StackPanel VerticalAlignment="Top" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding Listening}" Visibility="{Binding ListeningVisible}"  ToolTip="勾选监听" VerticalAlignment="Center"/>
                    <EditorCommon:CustomTextBlock Text="{Binding ItemName}" Foreground="{Binding TreeViewItemForeground}" HighLightString="{Binding HighLightString}" Grid.Column="1" VerticalAlignment="Center"/>
                </StackPanel>
                <ListBox Grid.Column="2" Style="{DynamicResource {ComponentResourceKey ResourceId=ListBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"
                         ItemsSource="{Binding DataValues}">
                    <ListBox.ItemTemplate>
                        <DataTemplate >
                            <Grid d:DesignWidth="142.261" Margin="0,1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton IsChecked="{Binding ShowInGraph}" Style="{DynamicResource {ComponentResourceKey ResourceId=ToggleButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"
                                      ToolTip="显示时间线" Visibility="{Binding ShowInGraphButtonVisible}">
                                    <Image Source="/ResourceLibrary;component/Icons/Icons/icon_toolbar_genericfinder_512px.png" Width="18" Height="18"/>
                                </ToggleButton>
                                <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="2" Text="{Binding ValueName}" Foreground="#FF818181"/>
                                <TextBlock Margin="2" Grid.Column="2" VerticalAlignment="Center" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" Text="{Binding Value}" Foreground="White" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="PerfParentTemplate" ItemsSource="{Binding Childrens}" DataType="{x:Type local:PerformanceItem_Parent}">
            <Grid Background="{Binding TreeViewItemBackground}" Margin="0,1,1,0">
                <Grid.ContextMenu>
                    <ContextMenu Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ContextMenu_Default}}">
                        <MenuItem Header="选中全部子" Click="MenuItem_CheckAllChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                        <MenuItem Header="取消选中全部子" Click="MenuItem_UnCheckAllChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                        <Separator/>
                        <MenuItem Header="选中当前层全部子" Click="MenuItem_CheckAllCurrentLevelChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                        <MenuItem Header="取消选中当前层全部子" Click="MenuItem_UnCheckAllCurrentLevelChildren_Click" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=MenuItem_Default}}"/>
                    </ContextMenu>
                </Grid.ContextMenu>
                <EditorCommon:CustomTextBlock Text="{Binding ItemName}" Foreground="{Binding TreeViewItemForeground}" HighLightString="{Binding HighLightString}" Grid.Column="2" VerticalAlignment="Center"/>
            </Grid>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    <TabControl Margin="0" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=TabControlStyle_Default}}">
        <TabItem Header="性能分析">
            <Grid Background="{DynamicResource {ComponentResourceKey ResourceId=PanelBackground,TypeInTargetAssembly={x:Type res:CustomResources}}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="380"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <!--ToolBar Style="{DynamicResource {ComponentResourceKey ResourceId=ToolBarStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Grid.ColumnSpan="3">
                    <TextBlock Text="绘制模式" VerticalAlignment="Center" Margin="2"/>
                    <ComboBox x:Name="ComboBox_RenderMode" SelectedValue="{Binding CurrentRenderMode,ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource {ComponentResourceKey ResourceId=ComboBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                </-->
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="监听账号:" Margin="2" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <TextBox Grid.Column="1" Margin="2" ToolTip="不设置监听账号则监听本机" Text="{Binding TargetAccount, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <Button x:Name="Button_Query" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Content="开始监听" Margin="2" Grid.Column="2" Foreground="Lime" Click="Button_Query_Click"/>
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Button ToolTip="展开所有节点" Click="Button_ExpandAll_Click" >
                        <Image Source="/ResourceLibrary;component/Icons/CodeGenerate/Expand.png" Width="18" Height="18"/>
                    </Button>
                    <Button ToolTip="折叠所有节点" Click="Button_FoldAll_Click" Grid.Column="1">
                        <Image Source="/ResourceLibrary;component/Icons/CodeGenerate/UnExpand.png" Width="18" Height="18"/>
                    </Button>
                    <SearchBox:SearchBox Margin="0" SearchText="{Binding SearchText, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2"/>
                </Grid>
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="特别关注:" Margin="2" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <Button Margin="2" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Grid.Column="1" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="加入特别关注" Click="Button_AddToInterest_Click">
                        <Image Source="/ResourceLibrary;component/Icons/Icons/icon_file_new_40x.png" Width="18" Height="18"/>
                    </Button>
                    <Button Margin="2" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Grid.Column="2" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="从特别关注中移除" Click="Button_RemoFromInterest_Click">
                        <Image Source="/ResourceLibrary;component/Icons/Icons/icon_Edit_Delete_40x.png" Width="18" Height="18"/>
                    </Button>
                </Grid>
                <ListView x:Name="ListView_SpInterest" Grid.Row="4" Style="{DynamicResource {ComponentResourceKey ResourceId=ListViewStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=GridViewColumnHeaderStyle_Default}}">
                            <GridViewColumn Header="路径" DisplayMemberBinding="{Binding Name}"/>
                            <GridViewColumn Header="数据">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding Data}" ContentTemplateSelector="{StaticResource dataTemplateSelector}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <GridSplitter Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=GridSplitterStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" ShowsPreview="True" Grid.Row="5" HorizontalAlignment="Stretch"/>
                <TextBlock Text="所有监控:" Grid.Row="6" Margin="2" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                <TreeView x:Name="TreeView_Items" Style="{DynamicResource {ComponentResourceKey ResourceId=TreeViewStyle_Default,TypeInTargetAssembly={x:Type res:CustomResources}}}" Grid.Row="7" SelectedItemChanged="TreeView_Items_SelectedItemChanged"
                          ItemTemplateSelector="{StaticResource dataTemplateSelector}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TreeViewItemTemplate_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ResourceId=TreeViewItemNormalForeground, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                            <Setter Property="Visibility" Value="{Binding Visibility, Mode=TwoWay}" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
                <GridSplitter Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=GridSplitterStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" ShowsPreview="True" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" Grid.RowSpan="9"/>
                <d3:ChartPlotter x:Name="plotter_Graph" Margin="0" Grid.Row="1" Grid.Column="2" Grid.RowSpan="9" Foreground="Black">
                    <d3:ChartPlotter.VerticalAxis>
                        <d3:VerticalIntegerAxis />
                    </d3:ChartPlotter.VerticalAxis>

                    <d3:ChartPlotter.HorizontalAxis>
                        <d3:HorizontalIntegerAxis  />
                    </d3:ChartPlotter.HorizontalAxis>

                    <d3:VerticalAxisTitle Content="数值" ></d3:VerticalAxisTitle>
                    <d3:HorizontalAxisTitle Content="时间" ></d3:HorizontalAxisTitle>
                </d3:ChartPlotter>
                <GridSplitter Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=GridSplitterStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" ShowsPreview="True" Grid.Row="8" HorizontalAlignment="Stretch"/>
                <Grid Grid.Row="9">
                    <TabControl Style="{DynamicResource {ComponentResourceKey ResourceId=TabControlStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                        <TabItem Header="设置">
                            <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=ScrollViewerStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                                <StackPanel x:Name="PerformanceSettingPanel" Orientation="Vertical"/>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="参数">
                            <WPG:PropertyGrid x:Name="ProGrid" Grid.Column="0" Grid.Row="0" Alphabetical="False" ShowHeadline="False" />
                        </TabItem>
                    </TabControl>
                </Grid>
            </Grid>
        </TabItem>
        <!--TabItem Header="内存分析">
            <Grid Background="{DynamicResource {ComponentResourceKey ResourceId=PanelBackground,TypeInTargetAssembly={x:Type res:CustomResources}}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="9*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Left">
                    <Button  Content="比较大内存" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="75"/>
                    <Button  Content="比较小内存" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="75"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Center">
                    <TextBox x:Name="CurFrame" MinWidth="150" Text="{Binding CurFrameTime, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Text="减去"  FontSize="13" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <TextBox x:Name="PreFrame" MinWidth="150" Text="{Binding PreFrameTime, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Text="（请依次次在左侧选择相减的2帧数据，不要一次多选）" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Right">
                    <Button x:Name="BigMemory" Content="查看大内存" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="75"/>
                    <Button x:Name="SmallMemory" Content="查看小内存" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="75"/>
                    <Button x:Name="Remove" Content="单个移除" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="75"/>
                    <Button x:Name="RemoveAll" Content="全部移除" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="75"/>
                </StackPanel>
                <Grid Grid.Row ="1">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Style="{DynamicResource {ComponentResourceKey ResourceId=ScrollViewerStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                        <ListView  MinWidth="120" x:Name="MemoryInfoListView" ItemsSource="{Binding MemoryInfoList, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2,2,2,0" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ListViewStyle_Default}}" >
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=GridViewColumnHeaderStyle_Default}}">
                                    <GridView.Columns>
                                        <GridViewColumn Header="帧内存信息" DisplayMemberBinding="{Binding Title}" >
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Title}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </ScrollViewer>
                </Grid>
                <DataGrid Grid.Row="1" Grid.Column="2" Background="Transparent" CanUserAddRows="False" x:Name="dataGrid" RowHeight="25" IsReadOnly="True" HeadersVisibility="Column"  Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" EnableColumnVirtualization="True" Grid.IsSharedSizeScope="True" VerticalScrollBarVisibility="Visible" Cursor="Arrow" AutoGenerateColumns="False" HorizontalGridLinesBrush="Black" >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Size" MinWidth="200" Binding="{Binding Size}"/>
                        <DataGridTextColumn Header="Count" MinWidth="200" Binding="{Binding Count}"/>
                        <DataGridTextColumn Header="Key" MinWidth="200" Binding="{Binding Key}"/>
                        <DataGridTextColumn Header="MaxSize" MinWidth="200" Binding="{Binding MaxSize}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </-->
    </TabControl>
</UserControl>

<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EditorCommon.Controls.Animation"
             xmlns:System="clr-namespace:System;assembly=mscorlib" 
             xmlns:Button="clr-namespace:ResourceLibrary.Controls.Button;assembly=ResourceLibrary"
             xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary"
             x:Class="EditorCommon.Controls.Animation.AnimationBlendSpaceControl"
             mc:Ignorable="d" x:Name="userControl"
             d:DesignHeight="450" d:DesignWidth="800" AllowDrop="True">
    <UserControl.Resources>
        <Style x:Key="NodeRectangleStyle" TargetType="{x:Type Rectangle}">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="45"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
            <Setter Property="Fill" Value="#FFF4F4F5"/>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="4">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Border BorderThickness="0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Background="{TemplateBinding Foreground}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource {ComponentResourceKey ResourceId=ToggleButtonChecked, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="33"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="126*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="759*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="MainGrid" Margin="10" AllowDrop="True" Grid.Column="1">
                <Canvas x:Name="BlendCanvas" SizeChanged="BlendCanvas_SizeChanged" DragEnter="BlendCanvas_DragEnter" DragLeave="BlendCanvas_DragLeave" DragOver="BlendCanvas_DragOver" Drop="BlendCanvas_Drop" MouseEnter="BlendCanvas_MouseEnter" AllowDrop="True" MouseMove="BlendCanvas_MouseMove" Background="#02000000" MouseLeftButtonDown="BlendCanvas_MouseLeftButtonDown" MouseLeftButtonUp="BlendCanvas_MouseLeftButtonUp" Loaded="BlendCanvas_Loaded"/>
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal" Margin="10,10,0,0">
                    <ToggleButton x:Name="HideLabelBtn" HorizontalAlignment="Left" VerticalAlignment="Top" Background="White" Checked="HideLabelBtn_Checked" Width="25" Height="12.5" Unchecked="HideLabelBtn_Unchecked" Style="{DynamicResource ToggleButtonStyle}">
                        <ToggleButton.Foreground>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/BlendSpace/label_16.png" Stretch="Uniform"/>
                        </ToggleButton.Foreground>
                    </ToggleButton>
                </StackPanel>
            </Grid>
            <TextBlock x:Name="YMaxTB" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White"><Run Text="{Binding YMax, ElementName=userControl}"/></TextBlock>
            <TextBlock x:Name="YNameTB" TextWrapping="Wrap" Text="{Binding YDimensionName, ElementName=userControl}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
            <TextBlock x:Name="YMinTB" HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding YMin, ElementName=userControl}" VerticalAlignment="Bottom" Foreground="White"/>
            <TextBlock x:Name="XMinTB" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding XMin, ElementName=userControl}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" Foreground="White"/>
            <TextBlock x:Name="XNameTB" HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding XDimensionName, ElementName=userControl}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" Foreground="White"/>
            <TextBlock x:Name="XMaxTB" HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding XMax, ElementName=userControl}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" Foreground="White"/>
        </Grid>
        <local:AnimationPlayingControl x:Name="AnimationPlayingCtrl" CollapsedTitle="Collapsed" Margin="0" Grid.Row="1"/>
    </Grid>
</UserControl>

<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary"
             xmlns:local="clr-namespace:EditorCommon.Controls.Animation"
             xmlns:Button="clr-namespace:ResourceLibrary.Controls.Button;assembly=ResourceLibrary" 
             x:Name="userControl" 
             x:Class="EditorCommon.Controls.Animation.AnimationPlayingControl"
             mc:Ignorable="d" 
             d:DesignHeight="60" d:DesignWidth="800">
    <UserControl.Resources>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <ImageBrush x:Key="Button.Pause" ImageSource="/ResourceLibrary;component/Icons/Animation/pause.png"/>
        <ImageBrush x:Key="Button.Forward" ImageSource="/ResourceLibrary;component/Icons/Animation/forward.png"/>
        <ImageBrush x:Key="Button.Backward" ImageSource="/ResourceLibrary;component/Icons/Animation/backward.png"/>
        <Style x:Key="AnimationPlayButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Padding="0"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Margin" TargetName="border" Value="0,-0.5,0,0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Margin" TargetName="border" Value="0,0.5,0,-0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AnimationPlayingToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Margin" TargetName="border" Value="0,-0.5,0,0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Margin" TargetName="border" Value="0,0.5,0,-0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <StackPanel>
        <Border x:Name="Title" Visibility="{Binding CollapsedTitle, ElementName=userControl}" BorderBrush="#FF777777" BorderThickness="2" Background="#FF606060" CornerRadius="5" Height="30" Margin="0,0,4,0">
            <Grid>
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal">
                    <Label Content="Animation:" VerticalAlignment="Center"/>
                    <Label x:Name="AnimationNameLabel" Content="{Binding AnimationName, ElementName=userControl}" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal">
                    <Label Content="Percentage:" VerticalAlignment="Center"/>
                    <Label x:Name="PlayingPercent" Content="{Binding PlayPercent, ElementName=userControl}" ContentStringFormat="{}{0:F2}" Padding="0,5" VerticalAlignment="Center"/>
                    <Label Content="" Padding="0,5,5,5" VerticalAlignment="Center"/>
                    <Label Content="CurrentTime:" VerticalAlignment="Center"/>
                    <Label x:Name="CurrentTimeLabel" Content="{Binding CurrentTime, ElementName=userControl}" ContentStringFormat="{}{0:F2}" Padding="0,5" VerticalAlignment="Center"/>
                    <Label Content="/" Padding="0,5" VerticalAlignment="Center"/>
                    <Label x:Name="TotalTimeLabel" Content="{Binding Duration, ElementName=userControl}" ContentStringFormat="{}{0:F2}" Padding="0,5" VerticalAlignment="Center"/>
                    <Label Content="(Second)" Padding="0,5,5,5" VerticalAlignment="Center"/>
                    <Label Content="Currentframe:" VerticalAlignment="Center"/>
                    <Label x:Name="CurrentFrameLabel" Content="{Binding CurrentFrame, ElementName=userControl}" ContentStringFormat="{}{0:F2}" Padding="0,5,5,5" VerticalAlignment="Center"/>
                    <Label Content="/" Padding="0,5,5,5" VerticalAlignment="Center"/>
                    <Label x:Name="TotalFrameLabel" Content="{Binding TotalFrame, ElementName=userControl}" ContentStringFormat="{}{0:F2}" Padding="0,5,5,5" VerticalAlignment="Center"/>
                </StackPanel>
            </Grid>
        </Border>
        <Border x:Name="Body" BorderBrush="#FF777777" BorderThickness="2" Background="#FF606060" CornerRadius="5" Height="32.4" Margin="0,0,4,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="192"/>
                </Grid.ColumnDefinitions>
                <local:CustomSlider x:Name="AnimSlider" ThumbWidth="8" Foreground="#FFFFDEDE" SmallChange="0.1" Maximum="{Binding TotalFrame, ElementName=userControl}" Value="{Binding CurrentFrame, ElementName=userControl, Mode=TwoWay}" Margin="0" OnTicksCanvasLButtonDown="AnimSlider_OnTicksCanvasLButtonDown" />
                <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="0">
                    <Button x:Name="Backward_End_Button" BorderBrush="{x:Null}" Width="24" Height="24" Style="{DynamicResource AnimationPlayButtonStyle}" Margin="0" Click="Backward_End_Button_Click">
                        <Button.Background>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/backward_end.png"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="Backward_Step_Button" Content="" BorderBrush="{x:Null}" Width="24" Height="24" Style="{DynamicResource AnimationPlayButtonStyle}" Margin="0" Click="Backward_Step_Button_Click">
                        <Button.Background>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/backward_step.png"/>
                        </Button.Background>
                    </Button>
                    <ToggleButton x:Name="Backward_TGButton" Content="" Style="{DynamicResource AnimationPlayingToggleButtonStyle}" Height="24" Width="24" Click="Backward_TGButton_Click">
                        <ToggleButton.Foreground>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/pause.png"/>
                        </ToggleButton.Foreground>
                        <ToggleButton.Background>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/backward.png"/>
                        </ToggleButton.Background>
                    </ToggleButton>
                    <ToggleButton x:Name="Record_TGButton" Content="" Height="24" Width="24" Margin="0,1" Style="{DynamicResource AnimationPlayingToggleButtonStyle}" Click="Record_TGButton_Click">
                        <ToggleButton.Foreground>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/icon_stop_40x.png"/>
                        </ToggleButton.Foreground>
                        <ToggleButton.Background>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/Record.png"/>
                        </ToggleButton.Background>
                    </ToggleButton>
                    <ToggleButton x:Name="Forward_TGButton" Content="" Height="24" Width="24" Style="{DynamicResource AnimationPlayingToggleButtonStyle}" Click="Forward_TGButton_Click">
                        <ToggleButton.Foreground>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/pause.png"/>
                        </ToggleButton.Foreground>
                        <ToggleButton.Background>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/forward.png"/>
                        </ToggleButton.Background>
                    </ToggleButton>
                    <Button x:Name="Forward_Step_Button" Content="" BorderBrush="{x:Null}" Width="24" Height="24" Style="{DynamicResource AnimationPlayButtonStyle}" Margin="0" Click="Forward_Step_Button_Click">
                        <Button.Background>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/forward_step.png"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="Forward_End_Button" Content="" BorderBrush="{x:Null}" Width="24" Height="24" Style="{DynamicResource AnimationPlayButtonStyle}" Margin="0" Click="Forward_End_Button_Click">
                        <Button.Background>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/forward_end.png"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="Loop_Button" Content="" BorderBrush="{x:Null}" Width="24" Height="24" Style="{DynamicResource AnimationPlayButtonStyle}" Margin="0" Click="Loop_Button_Click">
                        <Button.Background>
                            <ImageBrush ImageSource="/ResourceLibrary;component/Icons/Animation/Loop.png"/>
                        </Button.Background>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
    </StackPanel>
</UserControl>

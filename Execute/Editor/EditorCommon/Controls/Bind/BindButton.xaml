<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary"
             xmlns:convert="clr-namespace:EditorCommon.Converter"
             xmlns:searchBox="clr-namespace:SearchBox"
             xmlns:ctrls ="clr-namespace:EditorCommon.Controls"
             x:Name="userControl" x:Class="EditorCommon.Bind.BindButton" 
             mc:Ignorable="d" MouseEnter="userControl_MouseEnter" >
    <UserControl.Resources>
        <SolidColorBrush x:Key="UnBindedBrush" Color="White" />
        <SolidColorBrush x:Key="BindedBrush" Color="Orange" />
        <Storyboard x:Key="OnMouseEnter_Btn">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Rect_BG">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF353535"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseLeave_Btn">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Rect_BG">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#02353535"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseLeftButtonUp_Btn">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="Rect_Btn">
            <BeginStoryboard x:Name="OnMouseEnter_Btn_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter_Btn}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="Rect_Btn">
            <BeginStoryboard x:Name="OnMouseLeave_Btn_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave_Btn}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonUp" SourceName="Rect_Btn">
            <BeginStoryboard x:Name="OnMouseLeftButtonUp_Btn_BeginStoryboard" Storyboard="{StaticResource OnMouseLeftButtonUp_Btn}"/>
            <BeginStoryboard x:Name="OnMouseLeave_Btn_BeginStoryboard1" Storyboard="{StaticResource OnMouseLeave_Btn}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <Rectangle x:Name="Rect_BG" Fill="#02353535" Margin="0" StrokeThickness="0"/>
        <Rectangle x:Name="Rect_Btn" Fill="#FFF4F4F5" Margin="2" Stroke="Black" Width="10" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding BindingRectVisibility, ElementName=userControl}"/>
        <Popup x:Name="popup" StaysOpen="False">
            <Grid MinWidth="169" Loaded="Grid_Loaded">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle Fill="#FF595959" Margin="0" Stroke="Black"/>
                <TextBlock x:Name="TextBlockPropertyName" Margin="5" />
                <Button Content="重置回默认值" Margin="2" Grid.Row="1" Foreground="White" Click="Button_ResetToDefault" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                <TabControl Grid.Row="2" Style="{DynamicResource {ComponentResourceKey ResourceId=TabControlStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                    <TabItem Header="函数绑定">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding BindFunctionName, ElementName=userControl}" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                            <StackPanel Orientation="Horizontal" Grid.Column="1" >
                                <Button Content=" + " Margin="2" Click="Button_AddCustomBind_Click" IsEnabled="{Binding BindFunctionOpEnable, ElementName=userControl}" Visibility="{Binding BindFunctionOpIsAdd, ElementName=userControl, Converter={x:Static convert:Bool2Visibility_Collapsed.Instance}}" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                                <Button Margin="2" Click="Button_FindCustomBind_Click" IsEnabled="{Binding BindFunctionOpEnable, ElementName=userControl}" Visibility="{Binding BindFunctionOpIsAdd, ElementName=userControl, Converter={x:Static convert:Bool2Visibility_FalseVisible_TrueCollapsed.Instance}}" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                                    <Image Width="12" Height="12" Source="/ResourceLibrary;component/Icons/Icons/lens_12x.png" Margin="3" />
                                </Button>
                                <Button Margin="2" Click="Button_DelCustomBind_Click" IsEnabled="{Binding BindFunctionOpEnable, ElementName=userControl}" Visibility="{Binding BindFunctionOpIsAdd, ElementName=userControl, Converter={x:Static convert:Bool2Visibility_FalseVisible_TrueCollapsed.Instance}}" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                                    <Image Width="12" Height="12" Source="/ResourceLibrary;component/Icons/Icons/icon_delete_16px.png" Margin="3" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="数据绑定" >
                        <Grid Margin="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="TB_AddVariableBind" Content=" + " HorizontalAlignment="Right" Margin="0" d:LayoutOverrides="Height" Style="{DynamicResource {ComponentResourceKey ResourceId=ToggleButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                            <Popup IsOpen="{Binding IsChecked, ElementName=TB_AddVariableBind}">
                                <Grid MinWidth="300" MinHeight="300" Loaded="Grid_VariableBindOP_Loaded">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="1*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <searchBox:SearchBox x:Name="SB_Control" Margin="2" TipText="查找控件" SearchText="{Binding UIElementFilterString, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TreeView x:Name="TreeView_UIs" Grid.Row="1" SelectedItemChanged="TreeView_UIs_SelectedItemChanged" Style="{DynamicResource {ComponentResourceKey ResourceId=TreeViewStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}">
                                        <TreeView.ItemContainerStyle>
                                            <Style TargetType="{x:Type TreeViewItem}">
                                                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TreeViewItemTemplate_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" />
                                                <Setter Property="Visibility" Value="{Binding Visibility, Mode=TwoWay}" />
                                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                            </Style>
                                        </TreeView.ItemContainerStyle>
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="1*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image x:Name="Image_Icon" Width="16" Height="16" Source="{Binding ImageIcon}"/>
                                                    <ctrls:CustomTextBlock Text="{Binding Name}" Grid.Column="1" HighLightString="{Binding HightLightString}" HighLightBrush="{DynamicResource {ComponentResourceKey ResourceId=FilterStringHightLightBrush, TypeInTargetAssembly={x:Type res:CustomResources}}}" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=TextBlockStyle_Default}}"/>
                                                </Grid>
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                    <searchBox:SearchBox x:Name="SB_Param" Margin="2" TipText="查找参数" SearchText="{Binding FilterString, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" />
                                    <GridSplitter Focusable="False" Grid.Column="1" Grid.RowSpan="2" Style="{DynamicResource {ComponentResourceKey ResourceId=GridSplitterStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" HorizontalAlignment="Stretch"/>
                                    <ListBox x:Name="ListBox_Variables" Grid.Row="1" Style="{DynamicResource {ComponentResourceKey ResourceId=ListBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" SelectionChanged="ListBoxVariables_SelectionChanged" Grid.Column="2">
                                        <ListBox.ItemTemplate>
                                            <HierarchicalDataTemplate>
                                                <ctrls:CustomTextBlock Text="{Binding VarialbeName}" HighLightString="{Binding HighLightString}" HighLightBrush="{DynamicResource {ComponentResourceKey ResourceId=FilterStringHightLightBrush, TypeInTargetAssembly={x:Type res:CustomResources}}}" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=TextBlockStyle_Default}}"/>
                                            </HierarchicalDataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Button x:Name="OKButton" Content=" 确定 " Click="Button_OK_Click" Grid.Row="2" Grid.ColumnSpan="3" HorizontalAlignment="Right" Margin="2" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                                </Grid>
                            </Popup>
                            <ListBox x:Name="ListBox_VariableBind" Margin="0,2,0,0" Grid.Row="1" Style="{DynamicResource {ComponentResourceKey ResourceId=ListBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                        </Grid>
                    </TabItem>
                </TabControl>
            </Grid>
        </Popup>
    </Grid>
</UserControl>

<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPG.Themes.TypeEditors"
             xmlns:wpg="clr-namespace:WPG"
             xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary" xmlns:Converters="clr-namespace:WPG.Converters" x:Name="userControl" x:Class="WPG.Themes.TypeEditors.FlagEnumEditor"
             mc:Ignorable="d" Loaded="userControl_Loaded" d:DesignWidth="20" d:DesignHeight="23.583" >
    <UserControl.Resources>
        <ControlTemplate x:Key="ListBoxTextBox" TargetType="{x:Type TextBox}">
            <!-- This must be named as PART_ContentHost -->
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">

            <Grid Width="15">
                <Rectangle HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="#02000000" Stroke="{x:Null}" RadiusX="2" RadiusY="2" />
                <Path HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="White" Data="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type wpg:PropertyGrid}, ResourceId=MouseOverBrush}}" TargetName="Rectangle" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Fill" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type wpg:PropertyGrid}, ResourceId=PressedBrush}}" TargetName="Rectangle" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type wpg:PropertyGrid}, ResourceId=DisabledBackgroundBrush}}" TargetName="Rectangle" />
                    <Setter Property="Stroke" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type wpg:PropertyGrid}, ResourceId=DisabledBorderBrush}}" TargetName="Rectangle" />
                    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type wpg:PropertyGrid}, ResourceId=DisabledForegroundBrush}}" />
                    <Setter Property="Fill" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type wpg:PropertyGrid}, ResourceId=DisabledForegroundBrush}}" TargetName="Arrow" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <Style x:Key="MutiSelectListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <CheckBox Content="{Binding TextStr}" Foreground="White" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {ComponentResourceKey ResourceId=CheckBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#4CFFFFFF"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#4CFFFFFF"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FFBDBDBD"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FFBDBDBD"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type wpg:PropertyGrid}, ResourceId=DisabledForegroundBrush}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsSelected" Value="{Binding Checked}"/>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="grid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="1" Grid.ColumnSpan="2" Background="#FF333333"/>
        <ToggleButton x:Name="dropToggle" Focusable="False" d:LayoutOverrides="Height, LeftMargin, RightMargin, TopMargin, BottomMargin" Grid.Column="1" Template="{DynamicResource ComboBoxToggleButton}" HorizontalAlignment="Right" Width="20"/>
        <Popup x:Name="popUp" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade" StaysOpen="False" IsOpen="{Binding IsChecked, ElementName=dropToggle}" Grid.ColumnSpan="2" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
            <ListBox x:Name="PART_ListBox" SelectionMode="Multiple" ItemContainerStyle="{DynamicResource MutiSelectListBoxItemStyle}" SelectionChanged="PART_ListBox_SelectionChanged" Style="{DynamicResource {ComponentResourceKey ResourceId=ListBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"
                     Loaded="userControl_Loaded">
                <ListBox.ItemsSource>
                    <Binding Path="EnumList" ElementName="userControl">
                    </Binding>
                </ListBox.ItemsSource>
            </ListBox>
        </Popup>
        <TextBox x:Name="textBox" HorizontalAlignment="Left" TextWrapping="Wrap" Template="{DynamicResource ListBoxTextBox}" Background="{x:Null}" Foreground="White"  Style="{DynamicResource {ComponentResourceKey ResourceId=TextBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
    </Grid>
</UserControl>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:clr="clr-namespace:System;assembly=mscorlib" 
	xmlns:clr2="clr-namespace:System.Collections;assembly=mscorlib" 
	xmlns:local="clr-namespace:WPG" xmlns:data="clr-namespace:WPG.Data" 
	xmlns:converters="clr-namespace:WPG.Converters" 
    xmlns:searchBox="clr-namespace:SearchBox"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary"	
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d">

    <ControlTemplate x:Key="ExpandPropertyGrid" TargetType="{x:Type local:PropertyGrid}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="OnMouseEnter_GridClear">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseLeave_GridClear">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF9B9B9B"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF9B9B9B"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid Grid.IsSharedSizeScope="True" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ControlBackground}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <DockPanel Grid.Row="0" LastChildFill="True">
                <Expander Header="{TemplateBinding Headline}" IsExpanded="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PropertyExpanded, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ExpanderStyle_Default}}">
                    <Grid Margin="1" Background="{DynamicResource {ComponentResourceKey ResourceId=PropertiesBackgroundBrush, TypeInTargetAssembly={x:Type local:PropertyGrid}}}" Grid.IsSharedSizeScope="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border x:Name="Border_Headline"  DataContext="{TemplateBinding ShowHeadline}" Width="Auto" Height="30" CornerRadius="5,5,0,0" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=HeaderBorderBrush, TypeInTargetAssembly={x:Type local:PropertyGrid}}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource {ComponentResourceKey ResourceId=HeaderBackgroundBrush, TypeInTargetAssembly={x:Type local:PropertyGrid}}}" Margin="0" Grid.RowSpan="1">
                            <Border.Visibility>
                                <Binding>
                                    <Binding.Converter>
                                        <BooleanToVisibilityConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </Border.Visibility>
                            <TextBlock Text="{TemplateBinding Headline}" Width="Auto" Height="Auto" Foreground="#FFFFFFFF" Margin="8" HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </Border>
                        <Grid Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.RowSpan="1" Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <searchBox:SearchBox SearchText="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Filter, UpdateSourceTrigger=PropertyChanged}" Height="25" Margin="1" VerticalAlignment="Center" d:LayoutOverrides="Width" Grid.Column="0" Grid.ColumnSpan="1" />
                            <ToggleButton Margin="1" Grid.Column="1" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Categorized, UpdateSourceTrigger=PropertyChanged}" Width="24" Height="24">
                                <Image Source="/ResourceLibrary;component/Icons/PropertyGrid/propertyGroup.png" />
                            </ToggleButton>
                            <ToggleButton Margin="1" Grid.Column="2" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Alphabetical, UpdateSourceTrigger=PropertyChanged}" Width="24" Height="24">
                                <Image Source="/ResourceLibrary;component/Icons/PropertyGrid/propertyA2Z.png" />
                            </ToggleButton>
                        </Grid>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Grid.RowSpan="1" Grid.Row="2" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ScrollViewerStyle_Default}}">

                            <ItemsControl ItemsSource="{TemplateBinding Properties}" Background="{DynamicResource {ComponentResourceKey ResourceId=PropertiesBackgroundBrush, TypeInTargetAssembly={x:Type local:PropertyGrid}}}" Grid.IsSharedSizeScope="True" />
                        </ScrollViewer>
                    </Grid>
                </Expander>
            </DockPanel>
            <GridSplitter Focusable="False" DataContext="{TemplateBinding ShowDescription}" Height="3" Grid.ColumnSpan="3" ResizeDirection="Rows" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                <GridSplitter.Visibility>
                    <Binding>
                        <Binding.Converter>
                            <BooleanToVisibilityConverter />
                        </Binding.Converter>
                    </Binding>
                </GridSplitter.Visibility>
            </GridSplitter>
            <StackPanel Background="{DynamicResource {ComponentResourceKey ResourceId=ExpanderBackgroundBrush, TypeInTargetAssembly={x:Type local:PropertyGrid}}}" Grid.Row="1" DataContext="{TemplateBinding ShowDescription}">
                <StackPanel.Visibility>
                    <Binding>
                        <Binding.Converter>
                            <BooleanToVisibilityConverter />
                        </Binding.Converter>
                    </Binding>
                </StackPanel.Visibility>
                <TextBlock Padding="2 2 2 0" FontWeight="Bold" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle, TypeInTargetAssembly={x:Type local:PropertyGrid}}}" Text="{Binding Name}" DataContext="{TemplateBinding SelectedProperty}"/>
                <TextBlock Padding="5 2 2 0" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle, TypeInTargetAssembly={x:Type local:PropertyGrid}}}" TextWrapping="WrapWithOverflow" Text="{Binding Description}" DataContext="{TemplateBinding SelectedProperty}"/>
            </StackPanel>
        </Grid>
        <!--<ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="Grid_Clear">
                <BeginStoryboard x:Name="OnMouseLeave_GridClear_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave_GridClear}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="Grid_Clear">
                <BeginStoryboard x:Name="OnMouseEnter_GridClear_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter_GridClear}"/>
            </EventTrigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>
    <ControlTemplate x:Key="NormalPropertyGrid" TargetType="{x:Type local:PropertyGrid}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="OnMouseEnter_GridClear">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseLeave_GridClear">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF9B9B9B"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF9B9B9B"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid Grid.IsSharedSizeScope="True" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ControlBackground}}" >
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <DockPanel Grid.Row="0" LastChildFill="True">
                <Grid Margin="1" Grid.IsSharedSizeScope="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border x:Name="Border_Headline" Width="Auto" Height="Auto" CornerRadius="0" BorderThickness="1,1,1,0" BorderBrush="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                            Background="#FF3C3C3C" Margin="0" Grid.RowSpan="1">
                        <Border.Visibility>
                            <Binding Path="ShowHeadline" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <BooleanToVisibilityConverter/>
                                </Binding.Converter>
                            </Binding>
                        </Border.Visibility>
                        <TextBlock Text="{TemplateBinding Headline}" Width="Auto" Height="Auto" Foreground="#FFFFFFFF" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="17.333" />
                    </Border>
                    <Grid Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.RowSpan="1" Grid.Row="1">
                        <Grid.Visibility>
                            <Binding Path="ShowToolbar" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <BooleanToVisibilityConverter/>
                                </Binding.Converter>
                            </Binding>
                        </Grid.Visibility>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <searchBox:SearchBox SearchText="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Filter, UpdateSourceTrigger=PropertyChanged}" Height="25" Margin="1" VerticalAlignment="Center" d:LayoutOverrides="Width" Grid.Column="0" Grid.ColumnSpan="1" />
                        <ToggleButton Margin="1" Grid.Column="1" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Categorized, UpdateSourceTrigger=PropertyChanged}" Width="24" Height="24"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ToggleButtonStyle_Default}}" BorderBrush="{x:Null}" >
                            <Image Source="/ResourceLibrary;component/Icons/PropertyGrid/propertyGroup.png" />
                        </ToggleButton>
                        <ToggleButton Margin="1" Grid.Column="2" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Alphabetical, UpdateSourceTrigger=PropertyChanged}" Width="24" Height="24"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ToggleButtonStyle_Default}}" BorderBrush="{x:Null}">
                            <Image Source="/ResourceLibrary;component/Icons/PropertyGrid/propertyA2Z.png" />
                        </ToggleButton>
                    </Grid>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Grid.RowSpan="1" Grid.Row="2" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=ScrollViewerStyle_Default}}">

                        <ItemsControl ItemsSource="{TemplateBinding Properties}" Background="{DynamicResource {ComponentResourceKey ResourceId=PanelBackground, TypeInTargetAssembly={x:Type res:CustomResources}}}" Grid.IsSharedSizeScope="True" />
                    </ScrollViewer>
                </Grid>
            </DockPanel>
            <GridSplitter Focusable="False" DataContext="{TemplateBinding ShowDescription}" Height="3" Grid.ColumnSpan="3" ResizeDirection="Rows" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                <GridSplitter.Visibility>
                    <Binding>
                        <Binding.Converter>
                            <BooleanToVisibilityConverter />
                        </Binding.Converter>
                    </Binding>
                </GridSplitter.Visibility>
            </GridSplitter>
            <StackPanel Grid.Row="1" DataContext="{TemplateBinding ShowDescription}">
                <StackPanel.Visibility>
                    <Binding>
                        <Binding.Converter>
                            <BooleanToVisibilityConverter />
                        </Binding.Converter>
                    </Binding>
                </StackPanel.Visibility>
                <TextBlock Padding="2 2 2 0" FontWeight="Bold" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle, TypeInTargetAssembly={x:Type local:PropertyGrid}}}" Text="{Binding Name}" DataContext="{TemplateBinding SelectedProperty}"/>
                <TextBlock Padding="5 2 2 0" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle, TypeInTargetAssembly={x:Type local:PropertyGrid}}}" TextWrapping="WrapWithOverflow" Text="{Binding Description}" DataContext="{TemplateBinding SelectedProperty}"/>
            </StackPanel>
        </Grid>
        <!--<ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="Grid_Clear">
                <BeginStoryboard x:Name="OnMouseLeave_GridClear_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave_GridClear}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="Grid_Clear">
                <BeginStoryboard x:Name="OnMouseEnter_GridClear_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter_GridClear}"/>
            </EventTrigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <!-- PropertyGrid Style -->
	<Style TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="Template" Value="{StaticResource NormalPropertyGrid}"/>
        <Style.Triggers>
            <Trigger Property="ExpanderHeadline" Value="true">
                <Setter Property="Template" Value="{StaticResource ExpandPropertyGrid}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
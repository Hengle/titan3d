<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:ResourceLibrary.Converter"
	xmlns:local="clr-namespace:ResourceLibrary">
    <convert:TreeViewLineConverter x:Key="LineConverter" />
    <convert:TreeViewVerLineHeightConverter x:Key="VerLineHeightConverter" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemNormalBackground}" Color="#02000000"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemNormalForeground}" Color="#FFF3F3F3"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemSelectedBackground}" Color="#FF717171"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemSelectedForeground}" Color="Black"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemMouseoverBackground}" Color="#4C878787"/>
    <BitmapImage x:Key="TreeviewItem_Add" UriSource="/ResourceLibrary;component/Icons/Controls/TreeviewItem_Add.png"/>
    <BitmapImage x:Key="TreeviewItem_Subtraction" UriSource="/ResourceLibrary;component/Icons/Controls/TreeviewItem_Subtraction.png"/>
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewStyle_Default}" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=PanelBackground}}"/>
        <!--Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/-->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2">
                        <ScrollViewer x:Name="_tv_scrollviewer_" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=ScrollViewerStyle_Default}}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ResourceId=DisableForeground, TypeInTargetAssembly={x:Type local:CustomResources}}}"/>
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF292929"/>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewExpandToggleButtonStyle_Default}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="3,3,3,3" Width="16">
                        <Grid x:Name="Grid_Expand" Opacity="1">
                            <Rectangle x:Name="BK" Fill="#FFEAEAEA" RadiusX="1" RadiusY="1" />
                            <Image x:Name="ForeImage"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="BK" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Source" TargetName="ForeImage" Value="{DynamicResource TreeviewItem_Subtraction}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Source" TargetName="ForeImage" Value="{DynamicResource TreeviewItem_Add}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                        <!-- Rectangle 9x9 pixels -->
                        <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Silver" Offset="0.5"/>
                                    <GradientStop Color="LightGray" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <!-- Vertical line inside rectangle -->
                        <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                        <!-- Horizontal line inside rectangle -->
                        <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandPath" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemStyle_Default}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemNormalForeground}}"/>
        <!--Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/-->
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemTemplate_Default}}" />
    </Style>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemTemplate_Default}" TargetType="{x:Type TreeViewItem}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="OnLoaded"/>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!-- Connecting Lines -->
            <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#FF8f8f8f" StrokeDashCap="Square" StrokeDashOffset="1" SnapsToDevicePixels="True"/>
            <Rectangle x:Name="VerLn" Width="1"  Stroke="#FF8f8f8f" StrokeDashCap="Square" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true"/>
            <!-- Vertical line -->
            <!--Path x:Name="VerLn" Data="M9.875,16 L9.875,24" HorizontalAlignment="Center" Margin="0,0,1,0" Grid.Row="1" Stretch="Fill" Stroke="White" Width="1" StrokeDashArray="3 3" Opacity="0.8"/-->
            <!-- Horizontal line -->
            <!--Path x:Name="HorLn" Grid.ColumnSpan="1" Data="M18.5,7.75 L-26.021238,7.75" Margin="9,1,0,0" Stretch="Fill" Stroke="White" VerticalAlignment="Center" StrokeDashArray="3 3" Width="Auto" HorizontalAlignment="Right" Opacity="0.8"/-->
            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {ComponentResourceKey ResourceId=TreeViewExpandToggleButtonStyle_Default, TypeInTargetAssembly={x:Type local:CustomResources}}}"/>
            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Grid.ColumnSpan="2">
                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True" SourceName="Bd">
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemMouseoverBackground}}"/>
            </Trigger>
            <Trigger Property="IsExpanded" Value="false">
                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                <!--Setter Property="Visibility" TargetName="VerLn" Value="Collapsed"/-->
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                <!--Setter Property="Visibility" TargetName="VerLn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="HorLn" Value="Collapsed"/-->
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemSelectedBackground}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemSelectedForeground}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemSelectedBackground}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemSelectedForeground}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ResourceId=DisableForeground, TypeInTargetAssembly={x:Type local:CustomResources}}}"/>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                <Setter TargetName="VerLn" Property="Height" Value="{Binding ActualHeight, ElementName=Bd, Converter={StaticResource VerLineHeightConverter}}"/>
                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=OutlinerTreeViewItemSelectedBackground}" Color="#FF717171"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=OutlinerTreeViewItemSelectedForeground}" Color="Black"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=OutlinerTreeViewItemInsertSibling}" Color="#FF6DA3CA"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=OutlinerTreeViewItemAddChild}" Color="#FF57758A"/>
    
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemTemplate_Outliner}" TargetType="{x:Type TreeViewItem}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="OnLoaded"/>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!-- Connecting Lines -->
            <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#FF8f8f8f" StrokeDashCap="Square" StrokeDashOffset="1" SnapsToDevicePixels="True"/>
            <Rectangle x:Name="VerLn" Width="1"  Stroke="#FF8f8f8f" StrokeDashCap="Square" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true"/>
            <!-- Vertical line -->
            <!--Path x:Name="VerLn" Data="M9.875,16 L9.875,24" HorizontalAlignment="Center" Margin="0,0,1,0" Grid.Row="1" Stretch="Fill" Stroke="White" Width="1" StrokeDashArray="3 3" Opacity="0.8"/-->
            <!-- Horizontal line -->
            <!--Path x:Name="HorLn" Grid.ColumnSpan="1" Data="M18.5,7.75 L-26.021238,7.75" Margin="9,1,0,0" Stretch="Fill" Stroke="White" VerticalAlignment="Center" StrokeDashArray="3 3" Width="Auto" HorizontalAlignment="Right" Opacity="0.8"/-->
            <ToggleButton x:Name="Expander" ClickMode="Release" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {ComponentResourceKey ResourceId=TreeViewExpandToggleButtonStyle_Default, TypeInTargetAssembly={x:Type local:CustomResources}}}"/>
            <CheckBox x:Name="CheckBox_TreeViewItem" Visibility="{Binding TreeviewItemCheckBoxVisibility, Mode=TwoWay}" IsChecked="{Binding TreeviewItemChecked, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Style="{DynamicResource {ComponentResourceKey ResourceId=CheckBoxStyle_Default, TypeInTargetAssembly={x:Type local:CustomResources}}}"/>
            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="2" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Grid.ColumnSpan="2">
                <ContentPresenter Tag="OutlinerItemCheckedPri" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <ItemsPresenter Tag="OutlinerItemCheckedPri" x:Name="ItemsHost" Grid.ColumnSpan="3" Grid.Column="1" Grid.Row="1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True" SourceName="Bd">
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemMouseoverBackground}}"/>
            </Trigger>
            <Trigger Property="IsExpanded" Value="false">
                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                <!--Setter Property="Visibility" TargetName="VerLn" Value="Collapsed"/-->
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                <!--Setter Property="Visibility" TargetName="VerLn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="HorLn" Value="Collapsed"/-->
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=OutlinerTreeViewItemSelectedBackground}}"/>
                <!--<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemSelectedForeground}}"/>-->
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=OutlinerTreeViewItemSelectedBackground}}"/>
                <!--<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=TreeViewItemSelectedForeground}}"/>-->
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ResourceId=DisableForeground, TypeInTargetAssembly={x:Type local:CustomResources}}}"/>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                <Setter TargetName="VerLn" Property="Height" Value="{Binding ActualHeight, ElementName=Bd, Converter={StaticResource VerLineHeightConverter}}"/>
                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- 应该在此定义资源字典条目。-->
</ResourceDictionary>
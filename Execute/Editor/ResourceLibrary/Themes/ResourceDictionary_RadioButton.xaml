<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:ResourceLibrary"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<!-- 应该在此定义资源字典条目。-->
	<SolidColorBrush x:Key="CheckBoxStroke2" Color="#8E8F8F"/>
	<Style x:Key="RadioButtonBlackStyle" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="#F4F4F4"/>
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke2}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnChecked">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Check">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnUnchecked">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Check">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseEnter">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
								<EasingColorKeyFrame KeyTime="0" Value="Black"/>
								<EasingColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseLeave">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
								<EasingColorKeyFrame KeyTime="0" Value="White"/>
								<EasingColorKeyFrame KeyTime="0:0:0.5" Value="Black"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid HorizontalAlignment="Left" Height="15" VerticalAlignment="Top" Width="15">
								<Ellipse x:Name="ellipse" Fill="#FF595959" Margin="0" Stroke="Black" StrokeThickness="1.5"/>
								<Ellipse x:Name="Check" Fill="White" Margin="0" Stroke="{x:Null}" StrokeThickness="1.5" Width="5" Height="5" Opacity="0"/>
							</Grid>
						</BulletDecorator.Bullet>
						<Label d:LayoutOverrides="Height" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Padding="0" Foreground="White">
							<ContentPresenter Height="Auto" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						</Label>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="ToggleButton.Unchecked">
							<BeginStoryboard x:Name="OnUnchecked_BeginStoryboard" Storyboard="{StaticResource OnUnchecked}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="ToggleButton.Checked">
							<BeginStoryboard x:Name="OnChecked_BeginStoryboard" Storyboard="{StaticResource OnChecked}"/>
						</EventTrigger>
						<!--Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger-->
						<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ResourceId=DisableForeground, TypeInTargetAssembly={x:Type local:CustomResources}}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:CustomResources}, ResourceId=RadioButtonStyle_Toggle}" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="#01000000"/>
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke2}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnChecked">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
								<EasingColorKeyFrame KeyTime="0" Value="#FFBDBDBD"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnUnchecked"/>
						<Storyboard x:Key="OnMouseEnter">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
								<EasingColorKeyFrame KeyTime="0" Value="#FF6C6C6C"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseLeave"/>
					</ControlTemplate.Resources>
					<Border x:Name="border" BorderThickness="0" Background="#02000000">
						<ContentPresenter Height="Auto" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {ComponentResourceKey ResourceId=ToggleButtonChecked, TypeInTargetAssembly={x:Type local:CustomResources}}}"/>
							<Setter Property="Foreground" Value="Black"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#01000000"/>
							<Setter Property="Foreground" Value="White"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
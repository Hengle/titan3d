<res:WindowBase x:Name="window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:SearchBox="clr-namespace:SearchBox;assembly=EditorCommon" 
        xmlns:res="clr-namespace:ResourceLibrary;assembly=ResourceLibrary" 
        xmlns:Controls="clr-namespace:EditorCommon.Controls;assembly=EditorCommon"
        xmlns:ipWin="clr-namespace:InputWindow;assembly=EditorCommon"
        x:Class="Macross.CreateMacrossWindow" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=DefaultWindowStyle}}"
        Title="Pick Parent Class" Height="300" Width="300" Loaded="Window_Loaded" WindowStartupLocation="CenterScreen" WindowStyle="ToolWindow" >
    <res:WindowBase.Resources>
        <ResourceDictionary Source="/Macross;component/Themes/Generic.xaml"/>
    </res:WindowBase.Resources>
    <Grid Background="{DynamicResource {ComponentResourceKey ResourceId=WindowBackground, TypeInTargetAssembly={x:Type res:CustomResources}}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Rectangle Grid.ColumnSpan="2" Grid.Row="2" Grid.RowSpan="2" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type res:CustomResources}, ResourceId=SpecialBtnBG}}"/>
        <TextBlock Margin="8,9" Grid.Row="2" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Text="名称:" VerticalAlignment="Center"/>
        <TextBox x:Name="TextBox_Name" Grid.Row="2" Margin="2,8,8,8" VerticalAlignment="Center" Grid.Column="1" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBoxStyle_ErrorCheck, TypeInTargetAssembly={x:Type res:CustomResources}}}">
            <TextBox.Text>
                <Binding Path="ResourceName" ElementName="window" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                    <Binding.ValidationRules>
                        <ipWin:RequiredRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBlock Margin="8,9" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBlockStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Text="说明:" VerticalAlignment="Center" Grid.Row="3"/>
        <TextBox Margin="2,8,8,8" Text="{Binding Description, ElementName=window, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Grid.Column="1" Style="{DynamicResource {ComponentResourceKey ResourceId=TextBoxStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Grid.Row="3"/>
        <SearchBox:SearchBox SearchText="{Binding FilterString, ElementName=window, Mode=TwoWay}" Height="20" Margin="2" Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Center"/>
        <TreeView x:Name="TreeView_Classes" Margin="2" Style="{DynamicResource {ComponentResourceKey ResourceId=TreeViewStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Grid.Row="1" SelectedItemChanged="TreeView_Classes_SelectedItemChanged" Grid.ColumnSpan="2" >
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Padding" Value="1,0,0,0"/>
                    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ResourceId=TreeViewItemNormalForeground, TypeInTargetAssembly={x:Type res:CustomResources}}}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TreeViewItemTemplate_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel>
                        <Image Margin="2" Source="{Binding Icon}"/>
                        <Controls:CustomTextBlock TextWrapping="Wrap" Text="{Binding Name}" HighLightString="{Binding HightLightString}" HighLightBrush="{DynamicResource {ComponentResourceKey ResourceId=FilterStringHightLightBrush, TypeInTargetAssembly={x:Type res:CustomResources}}}" VerticalAlignment="Center" Margin="2"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <StackPanel Grid.Row="4" HorizontalAlignment="Right" Orientation="Horizontal" Grid.ColumnSpan="2">
            <Button Content="Select" Margin="5" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Background="{DynamicResource {ComponentResourceKey ResourceId=SpecialBtnBG, TypeInTargetAssembly={x:Type res:CustomResources}}}" Padding="6,1" Click="Button_Select_Click"/>
            <Button Content="Cancel" Margin="5" Style="{DynamicResource {ComponentResourceKey ResourceId=ButtonStyle_Default, TypeInTargetAssembly={x:Type res:CustomResources}}}" Padding="6,1" Click="Button_Cancel_Click" IsCancel="True"/>
        </StackPanel>
    </Grid>
</res:WindowBase>

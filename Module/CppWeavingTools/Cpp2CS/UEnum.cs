using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CppWeaving.Cpp2CS
{
	class UEnumMember
	{
		public string Name;
		public string InitValue;
	}
	class UEnum : UTypeBase
	{
		public TUCreator CompileUnit;
		public ClangSharp.EnumDecl Decl;
		public bool IsFlags;
		public List<UEnumMember> Members = new List<UEnumMember>();
		public void BuildType()
		{
			MetaInfos.Clear();
			UTypeManager.BuildMetaData(Decl.Attrs, MetaInfos);
			IsFlags = !HasMeta(UProjectSettings.SV_EnumNoFlags);
			foreach (var i in Decl.Enumerators) {
				var tmp = new UEnumMember();
				tmp.Name = i.Name;
				tmp.InitValue = i.InitVal.ToString();
				Members.Add(tmp);
			}
		}
	}

	class UEnumCodeCs : UCodeBase
	{
		public UEnum mClass;
		public UEnumCodeCs(UEnum kls)
		{
			this.FullName = kls.FullName;
			mClass = kls;
		}
		public override string GetFileExt()
		{
			return ".cpp2cs.cs";
		}
		public override void OnGenCode()
		{
			AddLine($"//generated by CppWeaving");
			AddLine($"using System;");
			AddLine($"using System.Runtime.InteropServices;");

			NewLine();

			if (!string.IsNullOrEmpty(mClass.Namespace)) {
				AddLine($"namespace {mClass.Namespace}");
				PushBrackets();
			}
			if (!mClass.HasMeta(UProjectSettings.SV_EnumNoFlags)) {
				AddLine($"[System.Flags]");
			}
			AddLine($"public enum {mClass.Name}");
			PushBrackets();
			{
				foreach (var i in mClass.Members) {
					AddLine($"{i.Name} = {i.InitValue},");
				}
			}
			PopBrackets();
			if (!string.IsNullOrEmpty(mClass.Namespace)) {
				PopBrackets();
			}
		}
	}
}
